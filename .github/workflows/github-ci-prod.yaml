name: Unit tests, build and push image
on:
  #push:
  #  branches:
  #    - production
      #- deploy-ci
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build-image:
    name: Run prepare and build image
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    #if: |
    #  startsWith(github.ref, 'refs/tags') ||
    #  github.ref == 'refs/heads/develop' || 
    #  (github.event_name == 'pull_request' && 
    #  github.event.pull_request.merged == true)
    steps:
      - name: Checkout codes
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.14.2'
      - name: Use branch name
        uses: nelonoel/branch-name@v1.0.1
        # Prepare
      ###Testing if SSH WORKS
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
            host: github.com
            private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Clone Touch Configs Repo to get env for prod
        run: git clone git@github.com:Touch-Physio/touch-health-assistant.git
      ### TESTING SSH ends
      - uses: haya14busa/action-cond@v1
        id: base_branch_tagging
        with:
          cond: ${{ startsWith(github.ref, 'refs/tags') }}
          if_true: $(echo ${{ github.event.base_ref }} | cut -d '/' -f 3)
          if_false: $BRANCH_NAME
      - uses: haya14busa/action-cond@v1
        id: tag_branch
        with:
          cond: ${{ startsWith(github.ref, 'refs/tags') }}
          if_true: $BRANCH_NAME
          if_false: $(echo ${GITHUB_SHA} | cut -c1-5)
      - name: Export BASE_BRANCH_NAME env
        run: |
          echo "BASE_BRANCH_NAME=${{ steps.base_branch_tagging.outputs.value }}" >> $GITHUB_ENV     
      - name: Export TAG_BRANCH env
        run: |
          echo "TAG=${{ steps.tag_branch.outputs.value }}" >> $GITHUB_ENV  
        # Env vars repo and tag
      - name: Export REPO env
        run: |
          echo "REPO=touch-tha-backend-test" >> $GITHUB_ENV
        # echo "REPO=touch-tha-frontend-$BASE_BRANCH_NAME" >> $GITHUB_ENV
        # Prepare
      - name: Install packages
        run: yarn install
      - name: Run build
        run: yarn build
        env:
          CI: false
      - name: Copy envs from Configs to Prod
        run: cp ~/Touch-Configs/aws-env/tha-prod-min/volumes-dedicated/prod-front-tha/.env ./build/.env
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_S3 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3 }}
          aws-region: ca-central-1
      # --delete tag aggresively deletes existing components of the app
      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./build s3://touch-tha --delete
      # Ensure Cloudfront cache invalidation (regularly refreshes cache) 
      - name: Ensure Cloudfront Cache is invalidated 
        run: aws cloudfront create-invalidation --distribution-id E3T7YBPRT4VU4I --paths /\*  